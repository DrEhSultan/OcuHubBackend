using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
using OcuHubBackend.Data;
using OcuHubBackend.Models;

namespace OcuHubBackend.Controllers
{
    [ApiController]
    [Route("api/[controller]")]
    public class UserProfileGeneratedController : ControllerBase
    {
        private readonly OcuHubDbContext _context;

        public UserProfileGeneratedController(OcuHubDbContext context)
        {
            _context = context;
        }

        [HttpGet("{firebaseUid}")]
        public async Task<ActionResult<UserProfileGenerated>> GetProfile(string firebaseUid)
        {
            var profile = await _context.UserProfileGenerateds
                .FirstOrDefaultAsync(p => p.UserId == firebaseUid);

            if (profile == null)
                return NotFound();

            return profile;
        }

        [HttpPost("{firebaseUid}")]
        public async Task<ActionResult<UserProfileGenerated>> UpsertProfile(string firebaseUid, UserProfileGenerated newProfile)
        {
            var existingProfile = await _context.UserProfileGenerateds
                .FirstOrDefaultAsync(p => p.UserId == firebaseUid);

            if (existingProfile == null)
            {
                newProfile.UserId = firebaseUid;
                newProfile.CreatedAt = DateTime.UtcNow;
                newProfile.UpdatedAt = DateTime.UtcNow;

                _context.UserProfileGenerateds.Add(newProfile);
                await _context.SaveChangesAsync();
                return CreatedAtAction(nameof(GetProfile), new { firebaseUid }, newProfile);
            }
            else
            {
                existingProfile.ProfessionTitle = newProfile.ProfessionTitle;
                existingProfile.SuggestedCountry = newProfile.SuggestedCountry;
                existingProfile.SuggestedCity = newProfile.SuggestedCity;
                existingProfile.IsAutoGenerated = newProfile.IsAutoGenerated;
                existingProfile.UpdatedAt = DateTime.UtcNow;

                await _context.SaveChangesAsync();
                return Ok(existingProfile);
            }
        }
    }
}
